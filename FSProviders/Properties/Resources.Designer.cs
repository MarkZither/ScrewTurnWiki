//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrewTurn.Wiki.Plugins.FSProviders.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScrewTurn.Wiki.Plugins.FSProviders.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create table [GlobalSetting] (
        ///	[Name] varchar(100) not null,
        ///	[Value] nvarchar(4000) not null,
        ///	constraint [PK_GlobalSetting] primary key clustered ([Name])
        ///)
        ///
        ///create table [Log] (
        ///	[Id] int not null identity,
        ///	[DateTime] datetime not null,
        ///	[EntryType] char not null,
        ///	[User] nvarchar(100) not null,
        ///	[Message] nvarchar(4000) not null,
        ///	[Wiki] nvarchar(100),
        ///	constraint [PK_Log] primary key clustered ([Id])
        ///)
        ///
        ///create table [PluginAssembly] (
        ///	[Name] varchar(100) not null,
        ///	[Assembly] var [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlobalSettingsDatabase {
            get {
                return ResourceManager.GetString("GlobalSettingsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create table [Namespace] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(100) not null,
        ///	[DefaultPage] nvarchar(200),
        ///	constraint [PK_Namespace] primary key clustered ([Wiki], [Name])
        ///)
        ///
        ///create table [Category](
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(100) not null,
        ///	[Namespace] nvarchar(100) not null,
        ///	constraint [FK_Category_Namespace] foreign key ([Wiki], [Namespace]) references [Namespace]([Wiki], [Name])
        ///		on delete cascade on update cascade,
        ///	constraint [PK_Category] primary k [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PagesDatabase {
            get {
                return ResourceManager.GetString("PagesDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///if (select count([Name]) from [Namespace] where [Name] = &apos;&apos; and [Wiki] = @wiki) = 0
        ///begin
        ///	insert into [Namespace] ([Wiki], [Name], [DefaultPage]) values (@wiki, &apos;&apos;, null)
        ///end
        ///.
        /// </summary>
        internal static string PagesInitNamespaceTableDatabase {
            get {
                return ResourceManager.GetString("PagesInitNamespaceTableDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create table [Setting] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] varchar(100) not null,
        ///	[Value] nvarchar(4000) not null,
        ///	constraint [PK_Setting] primary key clustered ([Wiki], [Name])
        ///)
        ///
        ///create table [MetaDataItem] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] varchar(100) not null,
        ///	[Tag] nvarchar(100) not null,
        ///	[Data] nvarchar(4000) not null,
        ///	constraint [PK_MetaDataItem] primary key clustered ([Wiki], [Name], [Tag])
        ///)
        ///
        ///create table [RecentChange] (
        ///	[Id] int not null identity,
        ///	[Wiki] var [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsDatabase {
            get {
                return ResourceManager.GetString("SettingsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///create table [User] (
        ///	[Wiki] varchar(100) not null,
        ///	[Username] nvarchar(100) not null,
        ///	[PasswordHash] varchar(100) not null,
        ///	[DisplayName] nvarchar(150),
        ///	[Email] varchar(100) not null,
        ///	[Active] bit not null,
        ///	[DateTime] datetime not null,
        ///	constraint [PK_User] primary key clustered ([Wiki], [Username])
        ///)
        ///
        ///create table [UserGroup] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(100) not null,
        ///	[Description] nvarchar(150),
        ///	constraint [PK_UserGroup] primary key clustered ([Wiki], [Nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsersDatabase {
            get {
                return ResourceManager.GetString("UsersDatabase", resourceCulture);
            }
        }
    }
}
